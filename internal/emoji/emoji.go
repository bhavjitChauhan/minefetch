/*
Package emoji provides utilities for working with Unicode 16.0 emoji characters.
*/
package emoji

import (
	"strings"
	"unicode"
)

// Emoji variation sequences
const (
	mono    rune = 0xFE0E
	colored rune = 0xFE0F
)

// Emoji is the set of Unicode characters with the emoji property true.
// The hash sign, asterisk and digits 0-9 are omitted from this table.
//
// See [Emoji Data].
//
// [Emoji Data]: https://unicode.org/Public/UNIDATA/emoji/emoji-data.txt
var Emoji = &unicode.RangeTable{
	R16: []unicode.Range16{
		// {0x0023, 0x0023, 1},
		// {0x002A, 0x002A, 1},
		// {0x0030, 0x0039, 1},
		{0x00A9, 0x00A9, 1},
		{0x00AE, 0x00AE, 1},
		{0x203C, 0x203C, 1},
		{0x2049, 0x2049, 1},
		{0x2122, 0x2122, 1},
		{0x2139, 0x2139, 1},
		{0x2194, 0x2199, 1},
		{0x21A9, 0x21AA, 1},
		{0x231A, 0x231B, 1},
		{0x2328, 0x2328, 1},
		{0x23CF, 0x23CF, 1},
		{0x23E9, 0x23EC, 1},
		{0x23ED, 0x23EE, 1},
		{0x23EF, 0x23EF, 1},
		{0x23F0, 0x23F0, 1},
		{0x23F1, 0x23F2, 1},
		{0x23F3, 0x23F3, 1},
		{0x23F8, 0x23FA, 1},
		{0x24C2, 0x24C2, 1},
		{0x25AA, 0x25AB, 1},
		{0x25B6, 0x25B6, 1},
		{0x25C0, 0x25C0, 1},
		{0x25FB, 0x25FE, 1},
		{0x2600, 0x2601, 1},
		{0x2602, 0x2603, 1},
		{0x2604, 0x2604, 1},
		{0x260E, 0x260E, 1},
		{0x2611, 0x2611, 1},
		{0x2614, 0x2615, 1},
		{0x2618, 0x2618, 1},
		{0x261D, 0x261D, 1},
		{0x2620, 0x2620, 1},
		{0x2622, 0x2623, 1},
		{0x2626, 0x2626, 1},
		{0x262A, 0x262A, 1},
		{0x262E, 0x262E, 1},
		{0x262F, 0x262F, 1},
		{0x2638, 0x2639, 1},
		{0x263A, 0x263A, 1},
		{0x2640, 0x2640, 1},
		{0x2642, 0x2642, 1},
		{0x2648, 0x2653, 1},
		{0x265F, 0x265F, 1},
		{0x2660, 0x2660, 1},
		{0x2663, 0x2663, 1},
		{0x2665, 0x2666, 1},
		{0x2668, 0x2668, 1},
		{0x267B, 0x267B, 1},
		{0x267E, 0x267E, 1},
		{0x267F, 0x267F, 1},
		{0x2692, 0x2692, 1},
		{0x2693, 0x2693, 1},
		{0x2694, 0x2694, 1},
		{0x2695, 0x2695, 1},
		{0x2696, 0x2697, 1},
		{0x2699, 0x2699, 1},
		{0x269B, 0x269C, 1},
		{0x26A0, 0x26A1, 1},
		{0x26A7, 0x26A7, 1},
		{0x26AA, 0x26AB, 1},
		{0x26B0, 0x26B1, 1},
		{0x26BD, 0x26BE, 1},
		{0x26C4, 0x26C5, 1},
		{0x26C8, 0x26C8, 1},
		{0x26CE, 0x26CE, 1},
		{0x26CF, 0x26CF, 1},
		{0x26D1, 0x26D1, 1},
		{0x26D3, 0x26D3, 1},
		{0x26D4, 0x26D4, 1},
		{0x26E9, 0x26E9, 1},
		{0x26EA, 0x26EA, 1},
		{0x26F0, 0x26F1, 1},
		{0x26F2, 0x26F3, 1},
		{0x26F4, 0x26F4, 1},
		{0x26F5, 0x26F5, 1},
		{0x26F7, 0x26F9, 1},
		{0x26FA, 0x26FA, 1},
		{0x26FD, 0x26FD, 1},
		{0x2702, 0x2702, 1},
		{0x2705, 0x2705, 1},
		{0x2708, 0x270C, 1},
		{0x270D, 0x270D, 1},
		{0x270F, 0x270F, 1},
		{0x2712, 0x2712, 1},
		{0x2714, 0x2714, 1},
		{0x2716, 0x2716, 1},
		{0x271D, 0x271D, 1},
		{0x2721, 0x2721, 1},
		{0x2728, 0x2728, 1},
		{0x2733, 0x2734, 1},
		{0x2744, 0x2744, 1},
		{0x2747, 0x2747, 1},
		{0x274C, 0x274C, 1},
		{0x274E, 0x274E, 1},
		{0x2753, 0x2755, 1},
		{0x2757, 0x2757, 1},
		{0x2763, 0x2763, 1},
		{0x2764, 0x2764, 1},
		{0x2795, 0x2797, 1},
		{0x27A1, 0x27A1, 1},
		{0x27B0, 0x27B0, 1},
		{0x27BF, 0x27BF, 1},
		{0x2934, 0x2935, 1},
		{0x2B05, 0x2B07, 1},
		{0x2B1B, 0x2B1C, 1},
		{0x2B50, 0x2B50, 1},
		{0x2B55, 0x2B55, 1},
		{0x3030, 0x3030, 1},
		{0x303D, 0x303D, 1},
		{0x3297, 0x3297, 1},
		{0x3299, 0x3299, 1},
	},
	R32: []unicode.Range32{
		{0x1F004, 0x1F004, 1},
		{0x1F0CF, 0x1F0CF, 1},
		{0x1F170, 0x1F171, 1},
		{0x1F17E, 0x1F17F, 1},
		{0x1F18E, 0x1F18E, 1},
		{0x1F191, 0x1F19A, 1},
		{0x1F1E6, 0x1F1FF, 1},
		{0x1F201, 0x1F202, 1},
		{0x1F21A, 0x1F21A, 1},
		{0x1F22F, 0x1F22F, 1},
		{0x1F232, 0x1F23A, 1},
		{0x1F250, 0x1F251, 1},
		{0x1F300, 0x1F30C, 1},
		{0x1F30D, 0x1F30E, 1},
		{0x1F30F, 0x1F30F, 1},
		{0x1F310, 0x1F310, 1},
		{0x1F311, 0x1F311, 1},
		{0x1F312, 0x1F312, 1},
		{0x1F313, 0x1F315, 1},
		{0x1F316, 0x1F318, 1},
		{0x1F319, 0x1F319, 1},
		{0x1F31A, 0x1F31A, 1},
		{0x1F31B, 0x1F31B, 1},
		{0x1F31C, 0x1F31C, 1},
		{0x1F31D, 0x1F31E, 1},
		{0x1F31F, 0x1F320, 1},
		{0x1F321, 0x1F321, 1},
		{0x1F324, 0x1F32C, 1},
		{0x1F32D, 0x1F32F, 1},
		{0x1F330, 0x1F331, 1},
		{0x1F332, 0x1F333, 1},
		{0x1F334, 0x1F335, 1},
		{0x1F336, 0x1F336, 1},
		{0x1F337, 0x1F34A, 1},
		{0x1F34B, 0x1F34B, 1},
		{0x1F34C, 0x1F34F, 1},
		{0x1F350, 0x1F350, 1},
		{0x1F351, 0x1F37B, 1},
		{0x1F37C, 0x1F37C, 1},
		{0x1F37D, 0x1F37D, 1},
		{0x1F37E, 0x1F37F, 1},
		{0x1F380, 0x1F393, 1},
		{0x1F396, 0x1F397, 1},
		{0x1F399, 0x1F39B, 1},
		{0x1F39E, 0x1F39F, 1},
		{0x1F3A0, 0x1F3C4, 1},
		{0x1F3C5, 0x1F3C5, 1},
		{0x1F3C6, 0x1F3C6, 1},
		{0x1F3C7, 0x1F3C7, 1},
		{0x1F3C8, 0x1F3C8, 1},
		{0x1F3C9, 0x1F3C9, 1},
		{0x1F3CA, 0x1F3CA, 1},
		{0x1F3CB, 0x1F3CE, 1},
		{0x1F3CF, 0x1F3D3, 1},
		{0x1F3D4, 0x1F3DF, 1},
		{0x1F3E0, 0x1F3E3, 1},
		{0x1F3E4, 0x1F3E4, 1},
		{0x1F3E5, 0x1F3F0, 1},
		{0x1F3F3, 0x1F3F3, 1},
		{0x1F3F4, 0x1F3F4, 1},
		{0x1F3F5, 0x1F3F5, 1},
		{0x1F3F7, 0x1F3F7, 1},
		{0x1F3F8, 0x1F407, 1},
		{0x1F408, 0x1F408, 1},
		{0x1F409, 0x1F40B, 1},
		{0x1F40C, 0x1F40E, 1},
		{0x1F40F, 0x1F410, 1},
		{0x1F411, 0x1F412, 1},
		{0x1F413, 0x1F413, 1},
		{0x1F414, 0x1F414, 1},
		{0x1F415, 0x1F415, 1},
		{0x1F416, 0x1F416, 1},
		{0x1F417, 0x1F429, 1},
		{0x1F42A, 0x1F42A, 1},
		{0x1F42B, 0x1F43E, 1},
		{0x1F43F, 0x1F43F, 1},
		{0x1F440, 0x1F440, 1},
		{0x1F441, 0x1F441, 1},
		{0x1F442, 0x1F464, 1},
		{0x1F465, 0x1F465, 1},
		{0x1F466, 0x1F46B, 1},
		{0x1F46C, 0x1F46D, 1},
		{0x1F46E, 0x1F4AC, 1},
		{0x1F4AD, 0x1F4AD, 1},
		{0x1F4AE, 0x1F4B5, 1},
		{0x1F4B6, 0x1F4B7, 1},
		{0x1F4B8, 0x1F4EB, 1},
		{0x1F4EC, 0x1F4ED, 1},
		{0x1F4EE, 0x1F4EE, 1},
		{0x1F4EF, 0x1F4EF, 1},
		{0x1F4F0, 0x1F4F4, 1},
		{0x1F4F5, 0x1F4F5, 1},
		{0x1F4F6, 0x1F4F7, 1},
		{0x1F4F8, 0x1F4F8, 1},
		{0x1F4F9, 0x1F4FC, 1},
		{0x1F4FD, 0x1F4FD, 1},
		{0x1F4FF, 0x1F502, 1},
		{0x1F503, 0x1F503, 1},
		{0x1F504, 0x1F507, 1},
		{0x1F508, 0x1F508, 1},
		{0x1F509, 0x1F509, 1},
		{0x1F50A, 0x1F514, 1},
		{0x1F515, 0x1F515, 1},
		{0x1F516, 0x1F52B, 1},
		{0x1F52C, 0x1F52D, 1},
		{0x1F52E, 0x1F53D, 1},
		{0x1F549, 0x1F54A, 1},
		{0x1F54B, 0x1F54E, 1},
		{0x1F550, 0x1F55B, 1},
		{0x1F55C, 0x1F567, 1},
		{0x1F56F, 0x1F570, 1},
		{0x1F573, 0x1F579, 1},
		{0x1F57A, 0x1F57A, 1},
		{0x1F587, 0x1F587, 1},
		{0x1F58A, 0x1F58D, 1},
		{0x1F590, 0x1F590, 1},
		{0x1F595, 0x1F596, 1},
		{0x1F5A4, 0x1F5A4, 1},
		{0x1F5A5, 0x1F5A5, 1},
		{0x1F5A8, 0x1F5A8, 1},
		{0x1F5B1, 0x1F5B2, 1},
		{0x1F5BC, 0x1F5BC, 1},
		{0x1F5C2, 0x1F5C4, 1},
		{0x1F5D1, 0x1F5D3, 1},
		{0x1F5DC, 0x1F5DE, 1},
		{0x1F5E1, 0x1F5E1, 1},
		{0x1F5E3, 0x1F5E3, 1},
		{0x1F5E8, 0x1F5E8, 1},
		{0x1F5EF, 0x1F5EF, 1},
		{0x1F5F3, 0x1F5F3, 1},
		{0x1F5FA, 0x1F5FA, 1},
		{0x1F5FB, 0x1F5FF, 1},
		{0x1F600, 0x1F600, 1},
		{0x1F601, 0x1F606, 1},
		{0x1F607, 0x1F608, 1},
		{0x1F609, 0x1F60D, 1},
		{0x1F60E, 0x1F60E, 1},
		{0x1F60F, 0x1F60F, 1},
		{0x1F610, 0x1F610, 1},
		{0x1F611, 0x1F611, 1},
		{0x1F612, 0x1F614, 1},
		{0x1F615, 0x1F615, 1},
		{0x1F616, 0x1F616, 1},
		{0x1F617, 0x1F617, 1},
		{0x1F618, 0x1F618, 1},
		{0x1F619, 0x1F619, 1},
		{0x1F61A, 0x1F61A, 1},
		{0x1F61B, 0x1F61B, 1},
		{0x1F61C, 0x1F61E, 1},
		{0x1F61F, 0x1F61F, 1},
		{0x1F620, 0x1F625, 1},
		{0x1F626, 0x1F627, 1},
		{0x1F628, 0x1F62B, 1},
		{0x1F62C, 0x1F62C, 1},
		{0x1F62D, 0x1F62D, 1},
		{0x1F62E, 0x1F62F, 1},
		{0x1F630, 0x1F633, 1},
		{0x1F634, 0x1F634, 1},
		{0x1F635, 0x1F635, 1},
		{0x1F636, 0x1F636, 1},
		{0x1F637, 0x1F640, 1},
		{0x1F641, 0x1F644, 1},
		{0x1F645, 0x1F64F, 1},
		{0x1F680, 0x1F680, 1},
		{0x1F681, 0x1F682, 1},
		{0x1F683, 0x1F685, 1},
		{0x1F686, 0x1F686, 1},
		{0x1F687, 0x1F687, 1},
		{0x1F688, 0x1F688, 1},
		{0x1F689, 0x1F689, 1},
		{0x1F68A, 0x1F68B, 1},
		{0x1F68C, 0x1F68C, 1},
		{0x1F68D, 0x1F68D, 1},
		{0x1F68E, 0x1F68E, 1},
		{0x1F68F, 0x1F68F, 1},
		{0x1F690, 0x1F690, 1},
		{0x1F691, 0x1F693, 1},
		{0x1F694, 0x1F694, 1},
		{0x1F695, 0x1F695, 1},
		{0x1F696, 0x1F696, 1},
		{0x1F697, 0x1F697, 1},
		{0x1F698, 0x1F698, 1},
		{0x1F699, 0x1F69A, 1},
		{0x1F69B, 0x1F6A1, 1},
		{0x1F6A2, 0x1F6A2, 1},
		{0x1F6A3, 0x1F6A3, 1},
		{0x1F6A4, 0x1F6A5, 1},
		{0x1F6A6, 0x1F6A6, 1},
		{0x1F6A7, 0x1F6AD, 1},
		{0x1F6AE, 0x1F6B1, 1},
		{0x1F6B2, 0x1F6B2, 1},
		{0x1F6B3, 0x1F6B5, 1},
		{0x1F6B6, 0x1F6B6, 1},
		{0x1F6B7, 0x1F6B8, 1},
		{0x1F6B9, 0x1F6BE, 1},
		{0x1F6BF, 0x1F6BF, 1},
		{0x1F6C0, 0x1F6C0, 1},
		{0x1F6C1, 0x1F6C5, 1},
		{0x1F6CB, 0x1F6CB, 1},
		{0x1F6CC, 0x1F6CC, 1},
		{0x1F6CD, 0x1F6CF, 1},
		{0x1F6D0, 0x1F6D0, 1},
		{0x1F6D1, 0x1F6D2, 1},
		{0x1F6D5, 0x1F6D5, 1},
		{0x1F6D6, 0x1F6D7, 1},
		{0x1F6DC, 0x1F6DC, 1},
		{0x1F6DD, 0x1F6DF, 1},
		{0x1F6E0, 0x1F6E5, 1},
		{0x1F6E9, 0x1F6E9, 1},
		{0x1F6EB, 0x1F6EC, 1},
		{0x1F6F0, 0x1F6F0, 1},
		{0x1F6F3, 0x1F6F3, 1},
		{0x1F6F4, 0x1F6F6, 1},
		{0x1F6F7, 0x1F6F8, 1},
		{0x1F6F9, 0x1F6F9, 1},
		{0x1F6FA, 0x1F6FA, 1},
		{0x1F6FB, 0x1F6FC, 1},
		{0x1F7E0, 0x1F7EB, 1},
		{0x1F7F0, 0x1F7F0, 1},
		{0x1F90C, 0x1F90C, 1},
		{0x1F90D, 0x1F90F, 1},
		{0x1F910, 0x1F918, 1},
		{0x1F919, 0x1F91E, 1},
		{0x1F91F, 0x1F91F, 1},
		{0x1F920, 0x1F927, 1},
		{0x1F928, 0x1F92F, 1},
		{0x1F930, 0x1F930, 1},
		{0x1F931, 0x1F932, 1},
		{0x1F933, 0x1F93A, 1},
		{0x1F93C, 0x1F93E, 1},
		{0x1F93F, 0x1F93F, 1},
		{0x1F940, 0x1F945, 1},
		{0x1F947, 0x1F94B, 1},
		{0x1F94C, 0x1F94C, 1},
		{0x1F94D, 0x1F94F, 1},
		{0x1F950, 0x1F95E, 1},
		{0x1F95F, 0x1F96B, 1},
		{0x1F96C, 0x1F970, 1},
		{0x1F971, 0x1F971, 1},
		{0x1F972, 0x1F972, 1},
		{0x1F973, 0x1F976, 1},
		{0x1F977, 0x1F978, 1},
		{0x1F979, 0x1F979, 1},
		{0x1F97A, 0x1F97A, 1},
		{0x1F97B, 0x1F97B, 1},
		{0x1F97C, 0x1F97F, 1},
		{0x1F980, 0x1F984, 1},
		{0x1F985, 0x1F991, 1},
		{0x1F992, 0x1F997, 1},
		{0x1F998, 0x1F9A2, 1},
		{0x1F9A3, 0x1F9A4, 1},
		{0x1F9A5, 0x1F9AA, 1},
		{0x1F9AB, 0x1F9AD, 1},
		{0x1F9AE, 0x1F9AF, 1},
		{0x1F9B0, 0x1F9B9, 1},
		{0x1F9BA, 0x1F9BF, 1},
		{0x1F9C0, 0x1F9C0, 1},
		{0x1F9C1, 0x1F9C2, 1},
		{0x1F9C3, 0x1F9CA, 1},
		{0x1F9CB, 0x1F9CB, 1},
		{0x1F9CC, 0x1F9CC, 1},
		{0x1F9CD, 0x1F9CF, 1},
		{0x1F9D0, 0x1F9E6, 1},
		{0x1F9E7, 0x1F9FF, 1},
		{0x1FA70, 0x1FA73, 1},
		{0x1FA74, 0x1FA74, 1},
		{0x1FA75, 0x1FA77, 1},
		{0x1FA78, 0x1FA7A, 1},
		{0x1FA7B, 0x1FA7C, 1},
		{0x1FA80, 0x1FA82, 1},
		{0x1FA83, 0x1FA86, 1},
		{0x1FA87, 0x1FA88, 1},
		{0x1FA89, 0x1FA89, 1},
		{0x1FA8F, 0x1FA8F, 1},
		{0x1FA90, 0x1FA95, 1},
		{0x1FA96, 0x1FAA8, 1},
		{0x1FAA9, 0x1FAAC, 1},
		{0x1FAAD, 0x1FAAF, 1},
		{0x1FAB0, 0x1FAB6, 1},
		{0x1FAB7, 0x1FABA, 1},
		{0x1FABB, 0x1FABD, 1},
		{0x1FABE, 0x1FABE, 1},
		{0x1FABF, 0x1FABF, 1},
		{0x1FAC0, 0x1FAC2, 1},
		{0x1FAC3, 0x1FAC5, 1},
		{0x1FAC6, 0x1FAC6, 1},
		{0x1FACE, 0x1FACF, 1},
		{0x1FAD0, 0x1FAD6, 1},
		{0x1FAD7, 0x1FAD9, 1},
		{0x1FADA, 0x1FADB, 1},
		{0x1FADC, 0x1FADC, 1},
		{0x1FADF, 0x1FADF, 1},
		{0x1FAE0, 0x1FAE7, 1},
		{0x1FAE8, 0x1FAE8, 1},
		{0x1FAE9, 0x1FAE9, 1},
		{0x1FAF0, 0x1FAF6, 1},
		{0x1FAF7, 0x1FAF8, 1},
	},
}

// IsEmoji reports whether the rune r is in the Emoji table.
func IsEmoji(r rune) bool {
	return unicode.Is(Emoji, r)
}

// ReplaceColored returns a copy of the string s with monochrome emoji.
//
// The mono variation sequence is inserted following all emoji characters.
func ReplaceColored(s string) string {
	b := strings.Builder{}
	runes := []rune(s)
	for i := 0; i < len(runes); i++ {
		if IsEmoji(runes[i]) && (i == len(runes)-1 || runes[i+1] != mono) {
			b.WriteRune(runes[i])
			b.WriteRune(mono)
			if i != len(runes)-1 && runes[i+1] == colored {
				i++
			}
			continue
		}
		b.WriteRune(runes[i])
	}

	return b.String()
}
